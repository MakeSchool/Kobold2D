{
  "configuration_format_version": 2,

  "default_target": {"project": "Kobold2D-Libraries", "project_config": "Release", "target": "kobold2d-ios"},


  // Dictionary of global configuration parameters.
  // These parameters are not taken from the xcode project,
  // so they need to be supplied by the user.
  "config": {

    // A short name to identify the application.
    // Used to decide the APK filename, but not shown
    // anywhere in the app.
    // "APPLICATION_NAME": "",

    // The name of the application to display in the launcher
    // "APPLICATION_FULL_NAME": "",

    // The unique identifier for the application.
    // Normally this is in reverse DNS notation, e.g.,
    // "com.apportable.Spin"
    // "APPLICATION_IDENTIFIER": "",

    // Short version name for the app, e.g., "1.0"
    // "SHORT_VERSION": "",

    // A list of features needed on the target platform.
    // Common features include:
    //   "accelerometer"
    //   "access_network_state"
    //   "access_wifi_state"
    //   "atc_slow_surface"
    //   "billing"
    //   "c2dm_receive"
    //   "check_license"
    //   "get_accounts"
    //   "large_heap"
    //   "large_heap"
    //   "live_wallpaper"
    //   "multitouch"
    //   "multitouch_distinct"
    //   "multitouch_jazzhand"
    //   "NFC"
    //   "no_internet"
    //   "notifications"
    //   "opengles2"
    //   "portrait"
    //   "prefer_external_storage"
    //   "read_phone_state"
    //   "stencil_buffer"
    //   "touch_filter_move"
    //   "touchscreen"
    //   "true_color"
    //   "vibrate"
    //   "wake_lock"
    //   "write_external_storage"
    //   "write_settings"
    //   "xperia"
    //"FEATURES": []

    // Preferred way of handling URLs in the code.
    // Leave it null for most cases.
    //"URL_SCHEME": null,

    // ID for reporting crashdumps for your app.
    // Supplied by Apportable.
    //"CRASHDUMP_APP_ID": "",

    // Secret key for encrypting and decrypting crashdumps
    // for your app.  Supplied by Apportable.
    //"CRASHDUMP_SECRET": "",

    // Key to receive remote notifications on the device.
    //"REMOTE_NOTIFICATION_KEY": "",

    // The method for adjusting the splash screen (Default.png)
    // to fit the native device resolution.  Options are:
    //   "aspect_fill"
    //   "aspect_fit"
    //   "letterbox" (the default)
    //   "native"
    //   "stretch"
    //"SPLASH_SCREEN_TYPE": "letterbox",

    // Path to the image to use for the app's icon.
    // Usually something like "./Icon.png".
    // "ICON": "",

    // A regular expression to determine which assets
    // should be compressed when building the final app.
    // By default, text assets are not compressed.  Use
    // this to compress certain text assets.  For example,
    // ".*.plist$" will cause all files ending in ".plist"
    // to be compressed.
    //"COMPRESSED_ASSETS_PATTERN": "",
    //"UNCOMPRESSED_ASSETS_PATTERN": "",
  },

  // Sometimes header include path ordering matters.  If so, put the ordering constraints into this
  // array.  For example, if "./foo" has to come before "./bar", you would put:
  // ["./foo", "./bar"]
  // Note that "./some_other_include_path" doesn't appear in the list, since its order doesn't matter.
  // You can also specify "*", which matches everything not already constrained.  This lets you put
  // particular paths at the beginning or end of the list.  For example, ["./foo", "*", "./bar"].
  "header_ordering_constraints": [],

  // Edit this section to add and replace files and parameters to the generated settings for this project.
  // If the generated settings for a particular file are incorrect, simply add it here with the settings
  // you need and the final build parameters will only included the version specified here.
  "add_params": {
    // A list of pch files to -include.
    // PCH files can be either a string, e.g., "./MyApp-Prefix.pch",
    // or a dictionary specifying the pch and the environment where
    // it should be used, e.g.,
    // {"pch": "./prefix-android.pch", "env": {"TARGET_OS": "android"}}
    "pchs": [],
    // A list of header search paths
    // e.g. "./External/facebook-sdk/include"
    "header_paths": [
        "libs/Box2D",
    ],
    // A list of global compile flags for the project.
    // Flags can be either a string, e.g. "-Werror-shadow",
    // or a dictionary specifying the flag and the environment
    // that it should be used in, e.g.,
    // {"flag": "-fstack-protector", "env": {"TARGET_OS": "android"}}
    "flags": [
        "-Wno-empty-body",
        "-Wno-unused-variable",
        "-Wno-sign-compare"
    ],
    // A dictionary of global compiler definitions for the project.
    // Defines can be a simple key-value pair, e.g., "DEBUG": 1,
    // or the value can be a dictionary specifying the value and the
    // environment that it should be used in, e.g.,
    // "SOME_DEFINE": {"value": "\"yep its building on android\"", "env": {"TARGET_OS": "android"}}
    "defines": {},
    // A list of dependencies.  Typically these correspond to
    // frameworks in the xcode project.
    "deps": [
        "GameKit",
        "iAd"
    ],
    // A list of source files (e.g. .m, .mm, .c, .cc, and .cpp) files to build.
    // Source files can be a string, e.g. "./main.c", or a dictionary specifying
    // the file, any special flags, any defines, and the environment
    // where it should be compiled, e.g.,
    // {"source": "./PngImageLoader.m", "flags": ["-fstack-protector"], "defines": {"PNG": 1}, "env": {"TARGET_TEXTURE_FMT": "png"}}
    "sources": [

        "libs/Box2D/Box2D/Collision/b2BroadPhase.cpp",
        "libs/Box2D/Box2D/Collision/b2CollideCircle.cpp",
        "libs/Box2D/Box2D/Collision/b2CollideEdge.cpp",
        "libs/Box2D/Box2D/Collision/b2CollidePolygon.cpp",
        "libs/Box2D/Box2D/Collision/b2Collision.cpp",
        "libs/Box2D/Box2D/Collision/b2Distance.cpp",
        "libs/Box2D/Box2D/Collision/b2DynamicTree.cpp",
        "libs/Box2D/Box2D/Collision/b2TimeOfImpact.cpp",
        "libs/Box2D/Box2D/Collision/Shapes/b2ChainShape.cpp",
        "libs/Box2D/Box2D/Collision/Shapes/b2CircleShape.cpp",
        "libs/Box2D/Box2D/Collision/Shapes/b2EdgeShape.cpp",
        "libs/Box2D/Box2D/Collision/Shapes/b2PolygonShape.cpp",
        "libs/Box2D/Box2D/Common/b2BlockAllocator.cpp",
        "libs/Box2D/Box2D/Common/b2Draw.cpp",
        "libs/Box2D/Box2D/Common/b2Math.cpp",
        "libs/Box2D/Box2D/Common/b2Settings.cpp",
        "libs/Box2D/Box2D/Common/b2StackAllocator.cpp",
        "libs/Box2D/Box2D/Common/b2Timer.cpp",
        "libs/Box2D/Box2D/Dynamics/b2Body.cpp",
        "libs/Box2D/Box2D/Dynamics/b2ContactManager.cpp",
        "libs/Box2D/Box2D/Dynamics/b2Fixture.cpp",
        "libs/Box2D/Box2D/Dynamics/b2Island.cpp",
        "libs/Box2D/Box2D/Dynamics/b2World.cpp",
        "libs/Box2D/Box2D/Dynamics/b2WorldCallbacks.cpp",
        "libs/Box2D/Box2D/Dynamics/Contacts/b2ChainAndCircleContact.cpp",
        "libs/Box2D/Box2D/Dynamics/Contacts/b2ChainAndPolygonContact.cpp",
        "libs/Box2D/Box2D/Dynamics/Contacts/b2CircleContact.cpp",
        "libs/Box2D/Box2D/Dynamics/Contacts/b2Contact.cpp",
        "libs/Box2D/Box2D/Dynamics/Contacts/b2ContactSolver.cpp",
        "libs/Box2D/Box2D/Dynamics/Contacts/b2EdgeAndCircleContact.cpp",
        "libs/Box2D/Box2D/Dynamics/Contacts/b2EdgeAndPolygonContact.cpp",
        "libs/Box2D/Box2D/Dynamics/Contacts/b2PolygonAndCircleContact.cpp",
        "libs/Box2D/Box2D/Dynamics/Contacts/b2PolygonContact.cpp",
        "libs/Box2D/Box2D/Dynamics/Joints/b2DistanceJoint.cpp",
        "libs/Box2D/Box2D/Dynamics/Joints/b2FrictionJoint.cpp",
        "libs/Box2D/Box2D/Dynamics/Joints/b2GearJoint.cpp",
        "libs/Box2D/Box2D/Dynamics/Joints/b2Joint.cpp",
        "libs/Box2D/Box2D/Dynamics/Joints/b2MouseJoint.cpp",
        "libs/Box2D/Box2D/Dynamics/Joints/b2PrismaticJoint.cpp",
        "libs/Box2D/Box2D/Dynamics/Joints/b2PulleyJoint.cpp",
        "libs/Box2D/Box2D/Dynamics/Joints/b2RevoluteJoint.cpp",
        "libs/Box2D/Box2D/Dynamics/Joints/b2RopeJoint.cpp",
        "libs/Box2D/Box2D/Dynamics/Joints/b2WeldJoint.cpp",
        "libs/Box2D/Box2D/Dynamics/Joints/b2WheelJoint.cpp",
        "libs/Box2D/Box2D/Rope/b2Rope.cpp",


        "libs/cocos2d-iphone/cocos2d/CCAction.m",
        "libs/cocos2d-iphone/cocos2d/CCActionCamera.m",
        "libs/cocos2d-iphone/cocos2d/CCActionEase.m",
        "libs/cocos2d-iphone/cocos2d/CCActionGrid.m",
        "libs/cocos2d-iphone/cocos2d/CCActionGrid3D.m",
        "libs/cocos2d-iphone/cocos2d/CCActionInstant.m",
        "libs/cocos2d-iphone/cocos2d/CCActionInterval.m",
        "libs/cocos2d-iphone/cocos2d/CCActionManager.m",
        "libs/cocos2d-iphone/cocos2d/CCActionPageTurn3D.m",
        "libs/cocos2d-iphone/cocos2d/CCActionProgressTimer.m",
        "libs/cocos2d-iphone/cocos2d/CCActionTiledGrid.m",
        "libs/cocos2d-iphone/cocos2d/CCActionTween.m",
        "libs/cocos2d-iphone/cocos2d/CCAnimation.m",
        "libs/cocos2d-iphone/cocos2d/CCAnimationCache.m",
        "libs/cocos2d-iphone/cocos2d/CCAtlasNode.m",
        "libs/cocos2d-iphone/cocos2d/CCCamera.m",
        "libs/cocos2d-iphone/cocos2d/CCConfiguration.m",
        "libs/cocos2d-iphone/cocos2d/CCDirector.m",
        "libs/cocos2d-iphone/cocos2d/CCDrawingPrimitives.m",
        "libs/cocos2d-iphone/cocos2d/CCGrabber.m",
        "libs/cocos2d-iphone/cocos2d/CCGrid.m",
        "libs/cocos2d-iphone/cocos2d/CCLabelAtlas.m",
        "libs/cocos2d-iphone/cocos2d/CCLabelBMFont.m",
        "libs/cocos2d-iphone/cocos2d/CCLabelTTF.m",
        "libs/cocos2d-iphone/cocos2d/CCLayer.m",
        "libs/cocos2d-iphone/cocos2d/CCMenu.m",
        "libs/cocos2d-iphone/cocos2d/CCMenuItem.m",
        "libs/cocos2d-iphone/cocos2d/CCMotionStreak.m",
        "libs/cocos2d-iphone/cocos2d/CCNode.m",
        "libs/cocos2d-iphone/cocos2d/CCParallaxNode.m",
        "libs/cocos2d-iphone/cocos2d/CCParticleExamples.m",
        "libs/cocos2d-iphone/cocos2d/CCParticleSystem.m",
        "libs/cocos2d-iphone/cocos2d/CCParticleSystemQuad.m",
        "libs/cocos2d-iphone/cocos2d/CCProgressTimer.m",
        "libs/cocos2d-iphone/cocos2d/CCRenderTexture.m",
        "libs/cocos2d-iphone/cocos2d/CCScene.m",
        "libs/cocos2d-iphone/cocos2d/CCScheduler.m",
        "libs/cocos2d-iphone/cocos2d/CCSprite.m",
        "libs/cocos2d-iphone/cocos2d/CCSpriteBatchNode.m",
        "libs/cocos2d-iphone/cocos2d/CCSpriteFrame.m",
        "libs/cocos2d-iphone/cocos2d/CCSpriteFrameCache.m",
        "libs/cocos2d-iphone/cocos2d/CCTexture2D.m",
        "libs/cocos2d-iphone/cocos2d/CCTextureAtlas.m",
        "libs/cocos2d-iphone/cocos2d/CCTextureCache.m",
        "libs/cocos2d-iphone/cocos2d/CCTexturePVR.m",
        "libs/cocos2d-iphone/cocos2d/CCTileMapAtlas.m",
        "libs/cocos2d-iphone/cocos2d/CCTMXLayer.m",
        "libs/cocos2d-iphone/cocos2d/CCTMXObjectGroup.m",
        "libs/cocos2d-iphone/cocos2d/CCTMXTiledMap.m",
        "libs/cocos2d-iphone/cocos2d/CCTMXXMLParser.m",
        "libs/cocos2d-iphone/cocos2d/CCTransition.m",
        "libs/cocos2d-iphone/cocos2d/CCTransitionPageTurn.m",
        "libs/cocos2d-iphone/cocos2d/cocos2d.m",
        "libs/cocos2d-iphone/cocos2d/Platforms/iOS/CCDirectorIOS.m",
        "libs/cocos2d-iphone/cocos2d/Platforms/iOS/CCTouchDispatcher.m",
        "libs/cocos2d-iphone/cocos2d/Platforms/iOS/CCTouchHandler.m",
        "libs/cocos2d-iphone/cocos2d/Platforms/Mac/CCDirectorMac.m",
        "libs/cocos2d-iphone/cocos2d/Platforms/Mac/CCEventDispatcher.m",
        "libs/cocos2d-iphone/cocos2d/Support/base64.c",
        "libs/cocos2d-iphone/cocos2d/Support/CCArray.m",
        "libs/cocos2d-iphone/cocos2d/Support/CCFileUtils.m",
        "libs/cocos2d-iphone/cocos2d/Support/CCProfiling.m",
        "libs/cocos2d-iphone/cocos2d/Support/ccUtils.c",
        "libs/cocos2d-iphone/cocos2d/Support/CGPointExtension.m",
        "libs/cocos2d-iphone/cocos2d/Support/TGAlib.m",
        "libs/cocos2d-iphone/cocos2d/Support/TransformUtils.m",
        "libs/cocos2d-iphone/cocos2d/Support/ZipUtils.m",
        "libs/cocos2d-iphone/cocos2d/CCParticleBatchNode.m",
        "libs/cocos2d-iphone/external/kazmath/src/aabb.c",
        "libs/cocos2d-iphone/external/kazmath/src/GL/mat4stack.c",
        "libs/cocos2d-iphone/external/kazmath/src/GL/matrix.c",
        "libs/cocos2d-iphone/external/kazmath/src/mat3.c",
        "libs/cocos2d-iphone/external/kazmath/src/mat4.c",
        "libs/cocos2d-iphone/external/kazmath/src/neon_matrix_impl.c",
        "libs/cocos2d-iphone/external/kazmath/src/plane.c",
        "libs/cocos2d-iphone/external/kazmath/src/quaternion.c",
        "libs/cocos2d-iphone/external/kazmath/src/ray2.c",
        "libs/cocos2d-iphone/external/kazmath/src/utility.c",
        "libs/cocos2d-iphone/external/kazmath/src/vec2.c",
        "libs/cocos2d-iphone/external/kazmath/src/vec3.c",
        "libs/cocos2d-iphone/external/kazmath/src/vec4.c",
        "libs/cocos2d-iphone/cocos2d/CCShaderCache.m",
        "libs/cocos2d-iphone/cocos2d/ccDeprecated.m",
        "libs/cocos2d-iphone/cocos2d/CCGLProgram.m",
        "libs/cocos2d-iphone/cocos2d/ccGLStateCache.m",
        "libs/cocos2d-iphone/cocos2d/ccShaders.m",
        "libs/cocos2d-iphone/cocos2d/CCTransitionProgress.m",
        "libs/cocos2d-iphone/cocos2d/Platforms/iOS/CCES2Renderer.m",
        "libs/cocos2d-iphone/cocos2d/Platforms/iOS/CCGLView.m",
        "libs/cocos2d-iphone/cocos2d/Platforms/Mac/CCGLView.m",
        "libs/cocos2d-iphone/cocos2d/Platforms/Mac/CCWindow.m",
        "libs/cocos2d-iphone/cocos2d/Support/CCVertex.m",
        "libs/cocos2d-iphone/cocos2d/Support/NSThread+performBlock.m",
        "libs/cocos2d-iphone/cocos2d/CCActionCatmullRom.m",
        "libs/cocos2d-iphone/cocos2d/CCNode+Debug.m",
        "libs/cocos2d-iphone/cocos2d/Support/ccCArray.m",
        "libs/cocos2d-iphone/cocos2d/CCClippingNode.m",
        "libs/cocos2d-iphone/cocos2d/CCDrawNode.m",
        "libs/cocos2d-iphone/cocos2d/ccFPSImages.m",
        "libs/cocos2d-iphone/cocos2d/CCPhysicsDebugNode.m",
        "libs/cocos2d-iphone/cocos2d/CCPhysicsSprite.mm",
        "libs/cocos2d-iphone/CocosDenshion/CDAudioManager.m",
        "libs/cocos2d-iphone/CocosDenshion/CDOpenALSupport.m",
        "libs/cocos2d-iphone/CocosDenshion/CDXMacOSXSupport.m",
        "libs/cocos2d-iphone/CocosDenshion/CDXPropertyModifierAction.m",
        "libs/cocos2d-iphone/CocosDenshion/CocosDenshion.m",
        "libs/cocos2d-iphone/CocosDenshion/SimpleAudioEngine.m",
        "libs/SneakyInput/Classes/SneakyButton.m",
        "libs/SneakyInput/Classes/SneakyButtonSkinnedBase.m",
        "libs/SneakyInput/Classes/SneakyJoystick.m",
        "libs/SneakyInput/Classes/SneakyJoystickSkinnedBase.m",
        "libs/cocos2d-iphone-extensions/Extensions/CCScrollLayer/CCScrollLayer.m",
    ],
    // A list of glob inclusion filters for additional files.
    // This can also be used to replace flags on multiple files.
    // e.g. {"source":"./Server/Level_[0-9].m","flags": ["-fno-objc-arc"],  "defines": {"NDEBUG": 1}}
    "sources_glob":[],
    // A list of assets to package with the application.
    // Assets can be either a string, e.g., "./Info.plist",
    // or a dictionary specifying the asset and the target path it should be written to
    // in the app, and the environment it should be included with, e.g.,
    // {"asset": "./Resources/cube_texture.pvr.ccz", "target_path": "Bundled Resources/", "env": {"TARGET_TEXTURE_FMT": "pvr"}}
    // or a dictionary like above, but instead specifying the full target file name
    // for the asset, e.g.,
    // {"asset": "./Resources/cube_texture.pvr.ccz", "target_file": "Bundled Resources/cube_texture.pvr.gz", "env": {"TARGET_TEXTURE_FMT": "pvr"}}
    "assets": [],
    // A list of Info.plist files.  The first one in the list will be the one we consider the main Info.plist.
    "infoplists": [],
  },

  // Edit this section to remove files and parameters from the generated #{$build_params_file} for this project.
  // For this section, only specify the file name as a string in the cases where you could normally
  // also specify an array or a dictionary.  To override the generated settings for a particular
  // file, simply add it to the "add_params" list above with the settings you want.
  "remove_params": {
    // A list of pch files to remove from -include.
    // PCH files can be either a string, e.g., "./MyApp-Prefix.pch",
    // or a dictionary specifying the pch and the environment where
    // it should be used, e.g.,
    // {"pch": "./prefix-android.pch", "env": {"TARGET_OS": "android"}}
    "pchs": [],
    // A list of header search paths.
    // e.g. "./External/facebook-sdk/include"
    "header_paths": [],
    // A list of global compile flags for the project.
    // Flags can be either a string, e.g. "-Werror-shadow",
    // or a dictionary specifying the flag and the environment
    // that it should be used in, e.g.,
    // {"flag": "-fstack-protector", "env": {"TARGET_OS": "android"}}
    "flags": [],
    // A dictionary of global compiler definitions for the project.
    // Defines can be a simple key-value pair, e.g., "DEBUG": 1,
    // or the value can be a dictionary specifying the value and the
    // environment that it should be used in, e.g.,
    // "SOME_DEFINE": {"value": "\"yep its building on android\"", "env": {"TARGET_OS": "android"}}
    "defines": {},
    // A list of dependencies.  Typically these correspond to
    // frameworks in the xcode project.
    "deps": [],
    // A list of source files (e.g. .m, .mm, .c, .cc, and .cpp) files to remove from the build.
    // e.g. "./External/Reachabilty/Reachability.m"
    "sources": [],
    // A list of glob removal filters to filter out source files.
    // e.g. "./Server/Level_[0-9].m"
    "sources_glob":[],
    // A list of assets to package with the application.
    // Assets can be either a string, e.g., "./Info.plist",
    // a dictionary specifying the asset, the target path it should be written to
    // in the app, and the environment it should be included with, e.g.,
    // {"asset": "./Resources/cube_texture.pvr.ccz", "target_path": "Bundled Resources/", "env": {"TARGET_TEXTURE_FMT": "pvr"}}
    // or a dictionary like above, but instead specifying the full target file name
    // for the asset, e.g.,
    // {"asset": "./Resources/cube_texture.pvr.ccz", "target_file": "Bundled Resources/cube_texture.pvr.gz", "env": {"TARGET_TEXTURE_FMT": "pvr"}}
    "assets": [],
    // A list of Info.plist files.  The first one in the list will be the one we consider the main Info.plist.
    "infoplists": [],
  }
}